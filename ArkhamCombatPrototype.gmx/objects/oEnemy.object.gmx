<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sEnemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oCharacter</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
movementSpdModifier = 250
accelAmt = 1

HP = 1000

awareOfPlayer = false;
attackQueued = false;
attackCooldown = false;

movingToTarget = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

image_angle = point_direction(x, y, oPlayer.x, oPlayer.y)

if (point_distance(x, y, oPlayer.x, oPlayer.y) &gt; 200) {
    direction = image_angle
    moving = true
} else if (point_distance(x, y, oPlayer.x, oPlayer.y) &lt; 150) {
    direction = image_angle - 180
    moving = true
} else {
    moving = false
}

maxSpeed = movementSpdModifier * delta_time / 1000000

image_blend = -1;

// Stun
if (StnDur &lt;= 0) {
    if (moving) {
        speed = clamp(speed + accelAmt, 0, maxSpeed)
    } else {
        speed = clamp(speed - accelAmt, 0, maxSpeed)
    }
} else {
    speed = 0;
    StnDur -= (delta_time/1000000);
    
    image_blend = c_yellow;
    attackQueued = false;
}

// Death
if (HP &lt;= 0) {
    attackQueued = false;
    instance_destroy();
}

// Attacking
if (attackQueued) {
    image_blend = c_red;
    movingToTarget = true;
}

if (movingToTarget) {
    direction = point_direction(x, y, oPlayer.x, oPlayer.y);
    speed = 2.5 * movementSpdModifier * delta_time / 1000000;
    
    if (place_meeting(x, y, oPlayer)) {
        movingToTarget = false;
        attackCooldown = true;
        attackQueued = false;
        atkCooldownDur = 5;
        dmgChar(oPlayer, 100);
        stnChar(oPlayer, 0.5);
    }
}

if (atkCooldownDur &gt; 0) {
    atkCooldownDur -= (delta_time/1000000);  
    attackQueued = false;
} else if (atkCooldownDur &lt;= 0) {
    attackCooldown = false;
}

// Collision test
if (place_meeting(x, y, oCharacter)) {
    var charToBumpAwayFrom = instance_place(x, y, oCharacter);
    direction = point_direction(x, y, charToBumpAwayFrom.x, charToBumpAwayFrom.y) + 180;
    speed = bumpSpd;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

draw_set_color(c_white)
draw_set_alpha(1)
draw_set_halign(fa_center)
draw_set_font(fDebug)

tempX = x
tempY = y
x = -1000000
y = -1000000

x = tempX
y = tempY

//draw_line(x, y, nearest.x, nearest.y)
draw_text(x, y + 20, string(distance_to_object(oPlayer)));
draw_text(x, y - 20, string(StnDur));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
